services:
  enrollment-server:
    build: ./enrollment-server
    # image: polaris/enrollment-server:latest  # FOR FINAL DELIVERABLE
    container_name: enrollment-server
    environment:
      - LIGHTHOUSE_HOSTNAME=${LIGHTHOUSE_HOSTNAME}  
      - LIGHTHOUSE_ADMIN_PASSWORD=${LIGHTHOUSE_ADMIN_PASSWORD}
    volumes:
      - ./shared:/home/enrollment-server/shared
    restart: unless-stopped
  nebula:
    image: nebulaoss/nebula:latest
    container_name: nebula
    network_mode: "host"
    cap_add:
      - NET_ADMIN
    volumes:
      - ./shared:/config
    depends_on:
      - enrollment-server
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${LIGHTHOUSE_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${LIGHTHOUSE_ADMIN_PASSWORD}
      - INFLUXDB_HOST=https://${LIGHTHOUSE_HOSTNAME}/influx
      - INFLUXDB_TOKEN=${LIGHTHOUSE_ADMIN_PASSWORD}
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard_provisioning.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
    restart: unless-stopped
    depends_on:
      - influxdb
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${LIGHTHOUSE_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${LIGHTHOUSE_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${LIGHTHOUSE_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=polaris
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
    restart: unless-stopped
  nginx:
    build: ./nginx
    container_name: nginx
    environment:
      - LIGHTHOUSE_HOSTNAME=${LIGHTHOUSE_HOSTNAME}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf
    command: /bin/sh -c "envsubst '\$LIGHTHOUSE_HOSTNAME' < /etc/nginx/conf.d/app.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - enrollment-server
      - grafana
      - influxdb
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
